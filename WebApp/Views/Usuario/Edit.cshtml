@model Model.modUsuarios

@{
    ViewBag.Title = "Altera Usuário";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Edit", "Usuario", FormMethod.Post, new { @id = "_AjaxForm", @enctype = "multipart/form-data", @autocomplete = "off" }))
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="x_panel">
            <h4>Alterar usuário</h4>
            <hr />
            <div class="x_content">
                <form class="form-horizontal form-label-left input_mask form-group has-feedback">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        <div class="col-xs-4">
                            @Html.LabelFor(model => model.nome, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.nome, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.nome, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-xs-4">
                            @Html.LabelFor(model => model.idDepartamento, htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.idDepartamento, (SelectList)ViewBag.Departamento, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.idDepartamento, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-xs-4">
                            @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <br />
                        <br />
                            <br />
                                 <br />
                    <div class="form-group">
                        <div class="col-xs-4">
                            @Html.LabelFor(model => model.login, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.login, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.login, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-xs-4">
                            @Html.LabelFor(model => model.senha, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.senha, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.senha, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-xs-4">
                            @Html.LabelFor(model => model.idTipoUsuario, htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.idTipoUsuario, (SelectList)ViewBag.TipoUsuario, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.idTipoUsuario, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <br />
                        <br />
                             <br />
                                   <br />
                    <div class="form-group">                      
                        <div class="col-xs-4">
                            @Html.LabelFor(model => model.flAtivo, htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.flAtivo, new[] {
                                            new SelectListItem() { Text = "SIM", Value=bool.TrueString},
                                            new SelectListItem() {Text = "NÃO", Value=bool.FalseString }
                                              }, "SELECIONE...", new { @class = "form-control" })                     
                            @Html.ValidationMessageFor(model => model.flAtivo, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-xs-4">
                            @Html.LabelFor(model => model.flDev, htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.flDev, new[] {
                                            new SelectListItem() { Text = "SIM", Value=bool.TrueString},
                                            new SelectListItem() {Text = "NÃO", Value=bool.FalseString }
                                              }, "SELECIONE...", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.flDev, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-xs-3">
                            @Html.Label("Foto do perfil", new { @class = "control-label" })
                            <br />
                            <input type="file" id="file" name="files[]" multiple />
                        </div>
                   </div>
           </form>
                <br />
                    <br />
                        <br />
                             <br />
                    <div class="col-md-6 col-sm-6 col-xs-12 form-group has-feedback">
                        <button type="submit" class="btn btn-success">
                            <span class="glyphicon glyphicon-floppy-disk"></span> Salvar
                        </button>

                        <button type="button" onclick="location.href='@Url.Action("Index", "Usuario")'" class="btn btn-dark">
                            <span class="glyphicon glyphicon-backward"></span> Voltar
                        </button>
                    </div>
            </div>
        </div>
    </div>
}

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
